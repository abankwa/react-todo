{"version":3,"sources":["Todo2/TodoItem.js","Todo2/TodoAdd.js","Todo2/App.js","index.js"],"names":["TodoItem","handleCheck","e","console","log","target","checked","props","markCompleted","id","this","todoData","title","completed","className","type","onChange","onClick","deleteTodo","bind","Component","TodoAdd","state","updateState","event","value","name","tmp","setState","handleAdd","uuidv4","addTodo","placeholder","App","todos","filter","todo","data","fetch","method","body","JSON","stringify","headers","then","res","json","parse","status","index","findIndex","item","clearCompleted","markAll","forEach","element","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d44e3e2b.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass TodoItem extends Component{\n\n    //state = this.props.todoData\n    \n    handleCheck = (e) => {\n        console.log(e.target.checked)\n        this.props.markCompleted(e.target.id,e.target.checked)\n    }\n\n    \n    render(){\n        //get props\n       const {id,title,completed} = this.props.todoData;\n\n        return (\n            <div className=\"todoItem\">\n                <input type=\"checkbox\" id={id} onChange={this.handleCheck } checked={completed}></input>\n                <div>{title}</div>\n                <button className=\"btn\" onClick={this.props.deleteTodo.bind(this,id)} >delete</button>\n            </div>\n            )\n    }\n}\n\n    \n\nexport default TodoItem;","import React, {Component} from 'react'\nimport { v4 as uuidv4 } from 'uuid';\n\nclass TodoAdd extends Component {\n\n    state = {\n            id: 999,\n            title: \"\",\n            completed: false\n    }\n\n    updateState = (event) => {\n       const {name,value} = event.target\n       let tmp = this.state;\n       tmp.title = value;\n       this.setState(tmp)\n    }\n\n    handleAdd = (e) => {\n        this.setState({id:uuidv4()})\n        this.props.addTodo(this.state)\n        this.setState({title:\"\"}) //clear textbox after adding\n    }\n\n    render(){\n        return (\n            <div className=\"addItem\">\n                <input type=\"text\" value={this.state.title} name=\"todoInput\" placeholder=\"add todo..\" onChange={this.updateState}/>\n                <button onClick={this.handleAdd}>add</button>                \n            </div>\n        )\n    }\n}\n\nexport default TodoAdd;","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport TodoItem from './TodoItem';\nimport TodoAdd from './TodoAdd';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nclass App extends Component {\n\n    state = {\n        todos: [ ]\n    }\n    componentDidMount(){\n        //get todo data from server\n        fetch(\"https://jsonplaceholder.typicode.com/todos?_limit=20\")\n        .then(res => res.json())\n        .then(data => {\n            let tmp = this.state.todos\n            tmp = data;\n            this.setState({todos: tmp})\n        })\n    }\n\n    deleteTodo =(id) => {\n        this.setState({todos: this.state.todos.filter((todo) => todo.id != id)})\n        //console.log('id')\n    }\n\n    addTodo = (data) => {\n        //add item to server first, then update state/UI\n        fetch(\"https://jsonplaceholder.typicode.com/todos\",{\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                \"Content-type\":\"application/json\"\n            }\n        }).then(res => res.json()).then(data => {\n            let tmp = JSON.parse(JSON.stringify(data));\n            tmp.id = uuidv4();\n            this.setState({todos: [...this.state.todos,tmp]})\n        })\n        \n        \n        \n    }\n\n    markCompleted = (id,status) => {\n        let index = this.state.todos.findIndex(item => {return item.id == id})\n        let tmp = JSON.parse(JSON.stringify(this.state.todos)); //clone todos\n        tmp[index].completed = !tmp[index].completed; //toggle complete status\n        this.setState({todos:tmp})\n    }\n\n    clearCompleted = () => {\n        console.log('clear completed')\n        this.setState({todos: this.state.todos.filter((todo) => todo.completed == false)})\n    }\n\n    markAll = () =>{\n        let tmp = JSON.parse(JSON.stringify(this.state.todos))\n        tmp.forEach(element => {\n            element.completed = true;\n        });\n        this.setState({todos:tmp})\n        console.log(tmp)\n    }\n    \n\n\n    render(){\n        //console.log('rendering App');\n        return (  \n            <>\n                <TodoAdd addTodo={this.addTodo}/>\n                {this.state.todos.map(todo =>  <TodoItem todoData={todo} key={todo.id} deleteTodo={this.deleteTodo} markCompleted={this.markCompleted}/>) /*this evaluates to a js array*/} \n                <button className=\"btnBase\" onClick={this.clearCompleted} >clear completed</button>\n                <button className=\"btnBase\" onClick={this.markAll}>mark all</button>\n            </>\n\n        )\n    }\n}\n\n\n\n\n\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\n//import Todo1 from './Todo1/App';\n//import Test from './Test1/Test';\nimport Todo2 from './Todo2/App';\n//import TestRouter from './TestRouter/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Todo2 />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}